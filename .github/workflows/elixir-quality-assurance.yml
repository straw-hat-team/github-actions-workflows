on:
  workflow_call:
    inputs:
      elixir-version:
        description: The Elixir version
        type: string
        required: true
      otp-version:
        description: The Erlang version
        type: string
        required: true
      testing-enabled:
        description: Enables the testing job
        type: boolean
        required: false
        default: true
      formatter-enabled:
        description: Enables the formatter job
        type: boolean
        required: false
        default: true
      credo-enabled:
        description: Enables the linter job
        type: boolean
        required: false
        default: true
      dialyzer-enabled:
        description: Enables the typespec job
        type: boolean
        required: false
        default: true

jobs:
  echo-version:
    name: Echo Elixir Version
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: straw-hat-team/github-actions-workflows/asdf/get-version@testing-elixir
        id: elixir-version
        with:
          plugin-name: elixir
      - shell: sh
        run: |
          echo ${{ steps.elixir-version.outputs.plugin-version }}

#  test:
#    name: Test
#    if: ${{ inputs.testing-enabled }}
#    runs-on: ubuntu-latest
#    steps:
#    - name: Checkout code
#      uses: actions/checkout@v2
#    - name: Set up Elixir
#      uses: erlef/setup-beam@v1
#      with:
#        elixir-version: ${{ inputs.elixir-version }}
#        otp-version: ${{ inputs.otp-version }}
#    - name: Restore dependencies cache
#      uses: actions/cache@v2
#      with:
#        path: deps
#        key: ${{ runner.os }}-mix-${{ hashFiles('**/mix.lock') }}
#        restore-keys: ${{ runner.os }}-mix-
#    - name: Install dependencies
#      run: |
#        mix local.rebar --force
#        mix local.hex --force
#        mix deps.get
#    - name: Run tests
#      run: mix test
#
#  format:
#    name: Format
#    if: ${{ inputs.formatter-enabled }}
#    runs-on: ubuntu-latest
#    steps:
#    - uses: actions/checkout@v2
#    - name: Set up Elixir
#      uses: erlef/setup-beam@v1
#      with:
#        elixir-version: ${{ inputs.elixir-version }}
#        otp-version: ${{ inputs.otp-version }}
#    - name: Run Formatter
#      run: mix format --check-formatted

  credo:
    name: Credo
    if: ${{ inputs.credo-enabled }}
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: straw-hat-team/github-actions-workflows/elixir/credo@testing-elixir
      with:
        elixir-version: ${{ inputs.elixir-version }}
        otp-version: ${{ inputs.otp-version }}

#  dialyzer:
#    name: Dialyzer
#    if: ${{ inputs.dialyzer-enabled }}
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@v2
#      - uses: straw-hat-team/github-actions-workflows/elixir/dialyzer@testing-elixir
#        with:
#          elixir-version: ${{ inputs.elixir-version }}
#          otp-version: ${{ inputs.otp-version }}
