name: Elixir Umbrella Publish
description: Publish an Elixir package to Hex.pm from an Umbrella app setup.
author: Straw Hat Team

inputs:
  elixir-version:
    description: The Elixir version. It fallback to .tool-versions if not specified
    required: false
  otp-version:
    description: The Erlang version. It fallback to .tool-versions if not specified
    required: false
  hex-api-key:
    description: The hex.pm API key
    required: true
  ref-name:
    description: The GitHub Release Tag Name with the format of "[package name]@v[version]"
    required: true
  cwd:
    description: The current working directory
    required: false
    default: "."

runs:
  using: composite
  steps:
    - name: Setup Elixir
      uses: straw-hat-team/github-actions-workflows/elixir/setup@v1.3.0
      with:
        elixir-version: ${{ inputs.elixir-version }}
        otp-version: ${{ inputs.otp-version }}
    - name: Run Hex Publish
      env:
        HEX_API_KEY: ${{ inputs.hex-api-key }}
      shell: sh
      run: |
        PACKAGE_RELEASE_REGEX="^(.+)\@v([0-9]+\.[0-9]+\.[0-9])$"
        REF_NAME="${{ inputs.ref-name }}"
        ROOT="${{ inputs.cwd }}"

        if [[ $REF_NAME =~ $PACKAGE_RELEASE_REGEX ]]; then
          RELEASE_TAG_PACKAGE_NAME="${BASH_REMATCH[1]}"
          RELEASE_TAG_PACKAGE_VERSION="${BASH_REMATCH[2]}"

          if [ -d "$ROOT/apps/$RELEASE_TAG_PACKAGE_NAME" ]; then
            cd "$ROOT/apps/$RELEASE_TAG_PACKAGE_NAME"
            CURRENT_PACKAGE_MIX_VERSION=$(mix run --no-compile --no-start -e 'Mix.Project.config() |> Keyword.get(:version) |> IO.puts()')

            if [ "$CURRENT_PACKAGE_MIX_VERSION" = "$RELEASE_TAG_PACKAGE_VERSION" ]; then
              echo "mix hex.publish --yes"
            else
              echo "\033[0;31m':$RELEASE_TAG_PACKAGE_NAME' package with '$CURRENT_PACKAGE_MIX_VERSION' version does not match the '$RELEASE_TAG_PACKAGE_VERSION' release tag version"
              exit 1
            fi
          else
            echo "\033[0;31m':$RELEASE_TAG_PACKAGE_NAME' package was not found under '$ROOT/apps' directory"
            exit 1
          fi
        else
          echo "no package release found in the release tag: $REF_NAME; skipping"
          exit 0
        fi
